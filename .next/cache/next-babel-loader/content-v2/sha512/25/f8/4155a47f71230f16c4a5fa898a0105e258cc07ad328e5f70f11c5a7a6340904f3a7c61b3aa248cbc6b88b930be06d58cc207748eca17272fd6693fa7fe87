{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Georgian\\\\Downloads\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { Fragment } from \"react\";\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, _this);\n}; // executed during the build process\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Georgian/Downloads/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","MeetupList","Fragment","HomePage","props"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B,sBAAO,QAAC,QAAD;AAAA,2BACL,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,WAAP;AAGD,CAJD,C,CAMA;;;KANMD,Q;;AAgCN,eAAeA,QAAf","sourcesContent":["import Head from \"next/head\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst HomePage = (props) => {\r\n  return <Fragment>\r\n    <Head></Head>\r\n  </Fragment>;\r\n};\r\n\r\n// executed during the build process\r\nexport async function getStaticProps() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://GeorgianIvan:ekk4vfLSoVFm6ra9@cluster0.hht1e.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => {\r\n        return {\r\n          title: meetup.title,\r\n          address: meetup.address,\r\n          image: meetup.image,\r\n          id: meetup._id.toString(),\r\n        };\r\n      }),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}